{"version":3,"sources":["webpack:///./src/components/Welcome.jsx","webpack:///./src/pages/index.jsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["letter_width","numCubes","speed","INIT_X","INIT_Y","INIT_IS_LEFT","INIT_IS_UP","INIT_COLOUR","Welcome","props","state","x","y","is_up","is_left","ctx","moveObjects","clearRect","canvas","width","height","isUp","isLeft","yloc","xloc","counter","ctxCol","fillStyle","colour","setState","fillRect","getRandomColor","colString","i","Math","floor","random","canvasRef","React","createRef","componentDidMount","this","current","getContext","window","innerWidth","innerHeight","count","Boolean","setInterval","render","className","ref","href","Component","IndexPage","query","m","module","exports","require","default","loader","enqueue","createContext","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"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","file":"component---src-pages-index-jsx-44b68ba1ee3e89d46876.js","sourcesContent":["import React from 'react'\n\nimport { graphql } from 'gatsby';\n\nimport '../styles/app.css';\n\nconst interval = 10;\nconst letter_width = 40;\nconst numCubes = 10;\n\nconst speed = [];\nconst INIT_X = [];\nconst INIT_Y = [];\nconst INIT_IS_LEFT = [];\nconst INIT_IS_UP = [];\nconst INIT_COLOUR = [];\n\nclass Welcome extends React.Component {\n    state = {\n        x:INIT_X,\n        y:INIT_Y,\n        is_up:INIT_IS_UP,\n        is_left:INIT_IS_LEFT,\n        ctx: null,\n    }\n    \n    constructor(props) {\n        super(props);\n        this.canvasRef = React.createRef();\n    }\n\n    moveObjects = () =>{\n        this.state.ctx.clearRect(0,0,this.state.ctx.canvas.width,this.state.ctx.canvas.height)\n\n        let isUp = this.state.is_up;\n        let isLeft = this.state.is_left;\n        let yloc = this.state.y;\n        let xloc = this.state.x;\n        for (let counter = 0; counter < numCubes; counter++){\n            if (yloc[counter]+letter_width > this.state.ctx.canvas.height){\n                isUp[counter] = true; \n            }\n            if(yloc[counter] < 0){\n                isUp[counter] = false; \n            }\n            if (xloc[counter]+letter_width > this.state.ctx.canvas.width){\n                isLeft[counter] = true; \n            }\n            if(xloc[counter] < 0){\n                isLeft[counter] = false; \n            }\n            yloc[counter] = yloc[counter] + (isUp[counter]? -speed[counter] : speed[counter]);\n            xloc[counter] = xloc[counter] + (isLeft[counter]? -speed[counter] : speed[counter]);\n            \n            let ctxCol = this.state.ctx\n            ctxCol.fillStyle = this.colour[counter];\n            this.setState({\n                ctx: ctxCol,\n            });\n            this.state.ctx.fillRect(xloc[counter], yloc[counter], letter_width, letter_width);            \n            this.setState({\n                y: yloc, \n                x: xloc,\n            });\n        }\n        this.setState({\n            is_left: isLeft,\n            is_up: isUp,\n        });\n    }\n\n    getRandomColor = () => {\n        let letters = '0123456789ABCDEF';\n        let colString = '#';\n        for (var i = 0; i < 6; i++) {\n            colString += letters[Math.floor(Math.random() * 16)];\n        }\n        return colString;\n    }\n\n    componentDidMount() {\n        const canvas = this.canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        this.setState({ctx: ctx});\n        ctx.canvas.width  = 0.8*window.innerWidth;\n        ctx.canvas.height = 0.8*window.innerHeight;\n\n        for (let count = 0; count < numCubes; count++){\n            speed[count] = Math.random()*4;\n            INIT_X[count] = Math.random()*ctx.canvas.width;\n            INIT_Y[count] = Math.random()*ctx.canvas.height;\n            INIT_IS_LEFT[count] = Boolean(Math.random()>0.5);\n            INIT_IS_UP[count] = Boolean(Math.random()>0.5);\n            INIT_COLOUR[count] = this.getRandomColor();\n        }\n\n        this.colour = INIT_COLOUR;\n\n        setInterval(() => {this.moveObjects()\n        }, interval)\n    }\n\n    render() {\n      return(\n        <body>\n          <canvas className =\"canvas\" ref={this.canvasRef} />\n          <div className=\"verticalContainer\">\n          <a className=\"launch\" href=\"/About\">Launch</a>\n          </div>\n        </body>\n      )\n    }\n  }\n  export default Welcome","import React from \"react\"\n\n// import Img from 'gatsby-image';\nimport { graphql } from 'gatsby';\n\nimport Welcome from '../components/Welcome.jsx'\n\nimport '../styles/index.css'\n\nconst IndexPage = props => (\n  <div>\n    <h1 className='index--title'>Alex's Website</h1>\n    {/* <Img className=\"index--image\" fixed={props.data.launchImage.childImageSharp.fixed} alt=\"\" /> */}\n    <Welcome/>\n  </div>\n)\n\nexport default IndexPage;\n\nexport const query = graphql`\n  query {\n    launchImage: file(relativePath: { eq: \"launchImage.png\" }) {\n      childImageSharp {\n        fixed(width: 500, quality: 100) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n  }\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}