{"version":3,"sources":["webpack:///./src/components/Welcome.jsx","webpack:///./src/pages/index.jsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["letter_width","speed","Math","random","Canvas","props","state","x","y","is_up","is_left","ctx","moveObjects","clearRect","canvas","width","height","isUp","isLeft","setState","fillRect","canvasRef","React","createRef","componentDidMount","this","current","getContext","window","innerWidth","innerHeight","setInterval","render","class","ref","className","to","Component","IndexPage","Welcome","query","m","module","exports","require","default","loader","enqueue","createContext","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"qIAMA,IACMA,EAAe,GACfC,EAAsB,EAAdC,KAAKC,SAAW,EAkEbC,E,oBAvDb,WAAYC,GAAQ,IAAD,SACf,cAAMA,IAAN,MATJC,MAAQ,CACJC,EAAE,EACFC,EAAE,EACFC,OAAM,EACNC,SAAQ,EACRC,IAAK,MAGU,EAKnBC,YAAc,WACV,EAAKN,MAAMK,IAAIE,UAAU,EAAE,EAAE,EAAKP,MAAMK,IAAIG,OAAOC,MAAM,EAAKT,MAAMK,IAAIG,OAAOE,QAE/E,IAAIC,EAAO,EAAKX,MAAMG,MAClBS,EAAS,EAAKZ,MAAMI,QAEpB,EAAKJ,MAAME,EAAER,EAAe,EAAKM,MAAMK,IAAIG,OAAOE,SAClDC,GAAO,GAER,EAAKX,MAAME,EAAI,IACdS,GAAO,GAEP,EAAKX,MAAMC,EAAEP,EAAe,EAAKM,MAAMK,IAAIG,OAAOC,QAClDG,GAAS,GAEV,EAAKZ,MAAMC,EAAI,IACdW,GAAS,GAEb,EAAKC,SAAS,CACVT,QAASQ,EACTT,MAAOQ,EACPT,EAAG,EAAKF,MAAME,GAAM,EAAKF,MAAMG,OAASR,EAAQA,GAChDM,EAAG,EAAKD,MAAMC,GAAM,EAAKD,MAAMI,SAAWT,EAAQA,KAGtD,EAAKK,MAAMK,IAAIS,SAAS,EAAKd,MAAMC,EAAG,EAAKD,MAAME,EAAGR,EAAcA,IA5BlE,EAAKqB,UAAYC,IAAMC,YAFR,E,kHAiCnBC,kBAAA,WAAqB,IAAD,OAEVb,EADSc,KAAKJ,UAAUK,QACXC,WAAW,MAC9BF,KAAKN,SAAS,CAACR,IAAKA,IACpBA,EAAIG,OAAOC,MAAS,GAAIa,OAAOC,WAC/BlB,EAAIG,OAAOE,OAAS,GAAIY,OAAOE,YAE/BC,aAAY,WAAO,EAAKnB,gBArDf,K,EAyDboB,OAAA,WACE,OACE,8BACE,4BAAQC,MAAO,SAASC,IAAKT,KAAKJ,YAClC,yBAAKc,UAAU,qBACf,kBAAC,IAAD,CAAMA,UAAU,SAASC,GAAG,WAA5B,a,GA1DWd,IAAMe,W,OCV3B,sCAiBeC,UARG,SAAAjC,GAAK,OACvB,8BACI,wBAAI8B,UAAU,gBAAd,kBAEA,kBAACI,EAAD,QAJJ,IAUaC,EAAK,a,oBCnBlB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,G,iCCA/C,qFAcyBK,QAAOC,QAELzB,IAAM0B,cAAc,K,0ECMhCC,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGE7B,IAAM8B,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV","file":"component---src-pages-index-jsx-352cb800ad41ca723277.js","sourcesContent":["import React from 'react'\n\nimport { Link } from 'gatsby';\n\nimport '../styles/app.css';\n\nconst interval = 10\nconst letter_width = 40\nconst speed = Math.random()*5+2\n\nclass Canvas extends React.Component {\n    state = {\n        x:0,\n        y:0,\n        is_up:false,\n        is_left:false,\n        ctx: null,\n    }\n    \n    constructor(props) {\n        super(props);\n        this.canvasRef = React.createRef();\n    }\n\n    moveObjects = () =>{\n        this.state.ctx.clearRect(0,0,this.state.ctx.canvas.width,this.state.ctx.canvas.height)\n\n        let isUp = this.state.is_up;\n        let isLeft = this.state.is_left;\n\n        if (this.state.y+letter_width > this.state.ctx.canvas.height){\n            isUp = true; \n        }\n        if(this.state.y < 0){\n            isUp = false; \n        }\n        if (this.state.x+letter_width > this.state.ctx.canvas.width){\n            isLeft = true; \n        }\n        if(this.state.x < 0){\n            isLeft = false; \n        }\n        this.setState({\n            is_left: isLeft,\n            is_up: isUp,\n            y: this.state.y + ((this.state.is_up)? -speed : speed), \n            x: this.state.x + ((this.state.is_left)? -speed : speed),\n            // ctx:{fillstyle: \"#FF0000\"},\n        });\n        this.state.ctx.fillRect(this.state.x, this.state.y, letter_width, letter_width);\n    }\n\n    componentDidMount() {\n        const canvas = this.canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        this.setState({ctx: ctx});\n        ctx.canvas.width  = 0.8*window.innerWidth;\n        ctx.canvas.height = 0.8*window.innerHeight;\n\n        setInterval(() => {this.moveObjects()\n        }, interval)\n    }\n\n    render() {\n      return(\n        <body>\n          <canvas class =\"canvas\" ref={this.canvasRef} />\n          <div className=\"verticalContainer\">\n          <Link className=\"launch\" to=\"//About\">Launch</Link>\n          </div>\n        </body>\n      )\n    }\n  }\n  export default Canvas","import React from \"react\"\n\n// import Img from 'gatsby-image';\nimport { graphql } from 'gatsby';\n\nimport Welcome from '../components/Welcome.jsx'\n\nimport '../styles/index.css'\n\nconst IndexPage = props => (\n<body>\n    <h1 className='index--title'>Alex's Website</h1>\n    {/* <Img className=\"index--image\" fixed={props.data.launchImage.childImageSharp.fixed} alt=\"\" /> */}\n    <Welcome/>\n</body>\n)\n\nexport default IndexPage;\n\nexport const query = graphql`\n  query {\n    launchImage: file(relativePath: { eq: \"launchImage.png\" }) {\n      childImageSharp {\n        fixed(width: 500, quality: 100) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n  }\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}