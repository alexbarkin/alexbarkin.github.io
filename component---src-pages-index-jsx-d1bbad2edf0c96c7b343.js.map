{"version":3,"sources":["webpack:///./src/components/Welcome.jsx","webpack:///./src/pages/index.jsx"],"names":["letter_width","numCubes","welcomeMessage","default_x_pos","default_y_pos","speed","INIT_X","INIT_Y","INIT_IS_LEFT","INIT_IS_UP","INIT_COLOUR","Welcome","props","state","x","y","is_up","is_left","ctx","hover","moveObjects","clearRect","canvas","width","height","isUp","isLeft","yloc","xloc","counter","ctxCol","fillStyle","colour","setState","fillRect","font","textAlign","textBaseline","fillText","Math","abs","getRandomColor","colString","i","floor","random","canvasRef","React","createRef","componentDidMount","this","current","getContext","window","innerWidth","innerHeight","count","Boolean","setInterval","handleHover","handleleaveHover","render","className","ref","href","onMouseEnter","bind","onMouseLeave","Component","IndexPage"],"mappings":"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","file":"component---src-pages-index-jsx-d1bbad2edf0c96c7b343.js","sourcesContent":["import React from 'react'\n\nimport '../styles/app.css';\n\nconst interval = 10;\nconst letter_width = 40;\nconst numCubes = 20;\nconst welcomeMessage = \"Welcome to the site!\";\n\nconst default_x_pos = [];\nconst default_y_pos = [];\n\nconst speed = [];\nconst INIT_X = [];\nconst INIT_Y = [];\nconst INIT_IS_LEFT = [];\nconst INIT_IS_UP = [];\nconst INIT_COLOUR = [];\n\nclass Welcome extends React.Component {\n    state = {\n        x:INIT_X,\n        y:INIT_Y,\n        is_up:INIT_IS_UP,\n        is_left:INIT_IS_LEFT,\n        ctx: null,\n        hover: false,\n    }\n    \n    constructor(props) {\n        super(props);\n        this.canvasRef = React.createRef();\n    }\n\n    moveObjects = () =>{\n        this.state.ctx.clearRect(0,0,this.state.ctx.canvas.width,this.state.ctx.canvas.height)\n\n        let isUp = this.state.is_up;\n        let isLeft = this.state.is_left;\n        let yloc = this.state.y;\n        let xloc = this.state.x;\n        if (this.state.hover === false){\n            for (let counter = 0; counter < numCubes; counter++){\n                if (yloc[counter]+letter_width > this.state.ctx.canvas.height){\n                    isUp[counter] = true; \n                }\n                if(yloc[counter] < 0){\n                    isUp[counter] = false; \n                }\n                if (xloc[counter]+letter_width > this.state.ctx.canvas.width){\n                    isLeft[counter] = true; \n                }\n                if(xloc[counter] < 0){\n                    isLeft[counter] = false; \n                }\n                yloc[counter] = yloc[counter] + (isUp[counter]? -speed[counter] : speed[counter]);\n                xloc[counter] = xloc[counter] + (isLeft[counter]? -speed[counter] : speed[counter]);\n                let ctxCol = this.state.ctx\n                ctxCol.fillStyle = this.colour[counter];\n                this.setState({\n                    ctx: ctxCol,\n                });\n\n                this.state.ctx.fillRect(xloc[counter], yloc[counter], letter_width, letter_width); \n\n                ctxCol = this.state.ctx\n                ctxCol.fillStyle = \"#212424\";\n                ctxCol.font=\"20px Roboto Mono monospace\";\n                ctxCol.textAlign=\"center\";\n                ctxCol.textBaseline = \"middle\";\n                this.setState({\n                    ctx: ctxCol,\n                });\n\n                this.state.ctx.fillText(welcomeMessage[counter], xloc[counter]+letter_width/2, yloc[counter]+letter_width/2)\n                this.setState({\n                    y: yloc, \n                    x: xloc,\n                });\n            }\n            this.setState({\n                is_left: isLeft,\n                is_up: isUp,\n            });\n        }\n        else{\n            for (let counter = 0; counter < numCubes; counter++){\n                if (yloc[counter] > default_y_pos[counter]){\n                    isUp[counter] = true; \n                }\n                if(yloc[counter] < default_y_pos[counter]){\n                    isUp[counter] = false; \n                }\n                if (xloc[counter] > default_x_pos[counter]){\n                    isLeft[counter] = true; \n                }\n                if(xloc[counter] < default_x_pos[counter]){\n                    isLeft[counter] = false; \n                }\n                if(Math.abs(yloc[counter]-default_y_pos[counter]) > 5*speed[counter]){\n                    yloc[counter] = yloc[counter] + (isUp[counter]? -5*speed[counter] : 5*speed[counter]);\n                }\n                else{\n                    yloc[counter] = default_y_pos[counter];\n                }\n                if(Math.abs(xloc[counter]-default_x_pos[counter]) > 5*speed[counter]){\n                    xloc[counter] = xloc[counter] + (isLeft[counter]? -5*speed[counter] : 5*speed[counter]);\n                }\n                else{\n                    xloc[counter] = default_x_pos[counter];\n                }\n                let ctxCol = this.state.ctx\n                ctxCol.fillStyle = this.colour[counter];\n                this.setState({\n                    ctx: ctxCol,\n                });\n\n                this.state.ctx.fillRect(xloc[counter], yloc[counter], letter_width, letter_width); \n\n                ctxCol = this.state.ctx\n                ctxCol.fillStyle = \"#212424\";\n                ctxCol.font=\"20px Roboto Mono monospace\";\n                ctxCol.textAlign=\"center\";\n                ctxCol.textBaseline = \"middle\";\n                this.setState({\n                    ctx: ctxCol,\n                });\n\n                this.state.ctx.fillText(welcomeMessage[counter], xloc[counter]+letter_width/2, yloc[counter]+letter_width/2)\n                this.setState({\n                    y: yloc, \n                    x: xloc,\n                });\n            }\n            this.setState({\n                is_left: isLeft,\n                is_up: isUp,\n            });\n        }\n    }\n\n    getRandomColor = () => {\n        let letters = '0123456789ABCDEF';\n        let colString = '#';\n        for (var i = 0; i < 6; i++) {\n            colString += letters[Math.floor(Math.random() * 16)];\n        }\n        return colString;\n    }\n\n    componentDidMount() {\n        const canvas = this.canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        this.setState({ctx: ctx});\n        ctx.canvas.width  = 0.8*window.innerWidth;\n        ctx.canvas.height = 0.8*window.innerHeight;\n\n        for (let counter = 0; counter < numCubes; counter++){\n            default_x_pos[counter] = (ctx.canvas.width/2)-5*(letter_width+10)+(counter%(numCubes/2))*(letter_width+10);\n            default_y_pos[counter] = (ctx.canvas.height/2)-20+((counter<(numCubes/2))?-(2*letter_width):(2*letter_width));\n        }\n\n        for (let count = 0; count < numCubes; count++){\n            speed[count] = Math.random()*3+1;\n            INIT_X[count] = Math.random()*ctx.canvas.width;\n            INIT_Y[count] = Math.random()*ctx.canvas.height;\n            INIT_IS_LEFT[count] = Boolean(Math.random()>0.5);\n            INIT_IS_UP[count] = Boolean(Math.random()>0.5);\n            INIT_COLOUR[count] = this.getRandomColor();\n        }\n\n        this.colour = INIT_COLOUR;\n\n        setInterval(() => {this.moveObjects()\n        }, interval)\n    }\n\n    handleHover(){\n        if (this.state.hover === false){\n            this.setState({hover: true})\n        }\n    }\n\n    handleleaveHover(){\n        if (this.state.hover === true){\n            this.setState({hover: false})\n        }\n    }\n\n    render() {\n      return(\n        <figure className = \"container--graphics\">\n            <canvas className =\"canvas\" ref={this.canvasRef} />\n            <div className=\"verticalContainer\">\n            <a className=\"launch\" href=\"/Home/\" \n            onMouseEnter={this.handleHover.bind(this)}\n            onMouseLeave={this.handleleaveHover.bind(this)}>\n                Launch\n            </a>\n            </div>\n        </figure>\n      )\n    }\n  }\n  export default Welcome","import React from \"react\"\n\nimport Welcome from '../components/Welcome.jsx'\n\nimport '../styles/index.css'\n\nconst IndexPage = props => (\n  <div>\n    <h1 className='index--title'>Alex's Website</h1>\n    <Welcome/>\n  </div>\n)\n\nexport default IndexPage;\n"],"sourceRoot":""}